/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import * as tslib_1 from "tslib";
import { OauthProvider } from './oauth-provider';
import { Observable } from 'rxjs';
import { Provider } from '../models/provider';
var FacebookProvider = /** @class */ (function (_super) {
    tslib_1.__extends(FacebookProvider, _super);
    function FacebookProvider(_config) {
        var _this = _super.call(this, Provider.FACEBOOK, '//connect.facebook.net/en_US/sdk.js', function () {
            var /** @type {?} */ initConfig = _this._config.initOptions;
            var /** @type {?} */ config = initConfig.version ? initConfig : tslib_1.__assign({}, initConfig, { version: 'v2.9' });
            FB.init(config);
        }) || this;
        _this._config = _config;
        return _this;
    }
    /**
     * @return {?}
     */
    FacebookProvider.prototype.login = /**
     * @return {?}
     */
    function () {
        var _this = this;
        return Observable.create(function (observer) {
            FB.login(function (response) {
                if (response.authResponse) {
                    var /** @type {?} */ authResponse_1 = response.authResponse;
                    FB.api('/me?fields=name,email,picture,first_name,last_name', function (fbUser) {
                        observer.complete(/** @type {?} */ ({
                            id: fbUser.id,
                            name: fbUser.name,
                            email: fbUser.email,
                            profileImg: "https://graph.facebook.com/" + fbUser.id + "/picture?type=normal",
                            firstName: fbUser.first_name,
                            lastName: fbUser.last_name,
                            accessToken: authResponse_1.accessToken
                        }));
                    });
                }
            }, _this._config.loginOptions);
        });
    };
    /**
     * @return {?}
     */
    FacebookProvider.prototype.logout = /**
     * @return {?}
     */
    function () {
        return Observable.create(function (observer) { return observer.complete(FB.logout()); });
    };
    return FacebookProvider;
}(OauthProvider));
export { FacebookProvider };
function FacebookProvider_tsickle_Closure_declarations() {
    /** @type {?} */
    FacebookProvider.prototype._config;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmFjZWJvb2stcHJvdmlkZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtc29jaWFsLWxvZ2luLyIsInNvdXJjZXMiOlsibGliL3Byb3ZpZGVycy9mYWNlYm9vay1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNqRCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBR2xDLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUk5QyxJQUFBO0lBQXNDLDRDQUFhO0lBQy9DLDBCQUFvQixPQUErQjtRQUFuRCxZQUNJLGtCQUFNLFFBQVEsQ0FBQyxRQUFRLEVBQUUscUNBQXFDLEVBQUU7WUFDNUQscUJBQU0sVUFBVSxHQUFHLEtBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDO1lBQzVDLHFCQUFNLE1BQU0sR0FBRyxVQUFVLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxzQkFBTSxVQUFVLEVBQUssRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFFLENBQUUsQ0FBQztZQUMzRixFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ25CLENBQUMsU0FDTDtRQU5tQixhQUFPLEdBQVAsT0FBTyxDQUF3Qjs7S0FNbEQ7Ozs7SUFFRCxnQ0FBSzs7O0lBQUw7UUFBQSxpQkFtQkM7UUFsQkcsTUFBTSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsVUFBQSxRQUFRO1lBQzdCLEVBQUUsQ0FBQyxLQUFLLENBQUMsVUFBQyxRQUFhO2dCQUNuQixFQUFFLENBQUMsQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztvQkFDeEIscUJBQU0sY0FBWSxHQUFHLFFBQVEsQ0FBQyxZQUFZLENBQUM7b0JBQzNDLEVBQUUsQ0FBQyxHQUFHLENBQUMsb0RBQW9ELEVBQUUsVUFBQyxNQUFXO3dCQUNyRSxRQUFRLENBQUMsUUFBUSxtQkFBQzs0QkFDZCxFQUFFLEVBQUUsTUFBTSxDQUFDLEVBQUU7NEJBQ2IsSUFBSSxFQUFFLE1BQU0sQ0FBQyxJQUFJOzRCQUNqQixLQUFLLEVBQUUsTUFBTSxDQUFDLEtBQUs7NEJBQ25CLFVBQVUsRUFBRSxnQ0FBOEIsTUFBTSxDQUFDLEVBQUUseUJBQXNCOzRCQUN6RSxTQUFTLEVBQUUsTUFBTSxDQUFDLFVBQVU7NEJBQzVCLFFBQVEsRUFBRSxNQUFNLENBQUMsU0FBUzs0QkFDMUIsV0FBVyxFQUFFLGNBQVksQ0FBQyxXQUFXO3lCQUMxQixFQUFDLENBQUM7cUJBQ3BCLENBQUMsQ0FBQztpQkFDTjthQUNKLEVBQUUsS0FBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsQ0FBQztTQUNqQyxDQUFDLENBQUM7S0FDTjs7OztJQUVELGlDQUFNOzs7SUFBTjtRQUNJLE1BQU0sQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLFVBQUEsUUFBUSxJQUFJLE9BQUEsUUFBUSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBOUIsQ0FBOEIsQ0FBQyxDQUFDO0tBQ3hFOzJCQXhDTDtFQVFzQyxhQUFhLEVBaUNsRCxDQUFBO0FBakNELDRCQWlDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9hdXRoUHJvdmlkZXIgfSBmcm9tICcuL29hdXRoLXByb3ZpZGVyJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IEZhY2Vib29rUHJvdmlkZXJDb25maWcgfSBmcm9tICcuLi9tb2RlbHMvY29uZmlnL2ZhY2Vib29rLXByb3ZpZGVyLWNvbmZpZyc7XG5pbXBvcnQgeyBTb2NpYWxVc2VyIH0gZnJvbSAnLi4vbW9kZWxzL3NvY2lhbC11c2VyJztcbmltcG9ydCB7IFByb3ZpZGVyIH0gZnJvbSAnLi4vbW9kZWxzL3Byb3ZpZGVyJztcblxuZGVjbGFyZSBjb25zdCBGQjogYW55O1xuXG5leHBvcnQgY2xhc3MgRmFjZWJvb2tQcm92aWRlciBleHRlbmRzIE9hdXRoUHJvdmlkZXIge1xuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgX2NvbmZpZzogRmFjZWJvb2tQcm92aWRlckNvbmZpZykge1xuICAgICAgICBzdXBlcihQcm92aWRlci5GQUNFQk9PSywgJy8vY29ubmVjdC5mYWNlYm9vay5uZXQvZW5fVVMvc2RrLmpzJywgKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgaW5pdENvbmZpZyA9IHRoaXMuX2NvbmZpZy5pbml0T3B0aW9ucztcbiAgICAgICAgICAgIGNvbnN0IGNvbmZpZyA9IGluaXRDb25maWcudmVyc2lvbiA/IGluaXRDb25maWcgOiB7IC4uLmluaXRDb25maWcsIC4uLnsgdmVyc2lvbjogJ3YyLjknIH0gfTtcbiAgICAgICAgICAgIEZCLmluaXQoY29uZmlnKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgbG9naW4oKTogT2JzZXJ2YWJsZTxTb2NpYWxVc2VyPiB7XG4gICAgICAgIHJldHVybiBPYnNlcnZhYmxlLmNyZWF0ZShvYnNlcnZlciA9PiB7XG4gICAgICAgICAgICBGQi5sb2dpbigocmVzcG9uc2U6IGFueSkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5hdXRoUmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgYXV0aFJlc3BvbnNlID0gcmVzcG9uc2UuYXV0aFJlc3BvbnNlO1xuICAgICAgICAgICAgICAgICAgICBGQi5hcGkoJy9tZT9maWVsZHM9bmFtZSxlbWFpbCxwaWN0dXJlLGZpcnN0X25hbWUsbGFzdF9uYW1lJywgKGZiVXNlcjogYW55KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvYnNlcnZlci5jb21wbGV0ZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6IGZiVXNlci5pZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBmYlVzZXIubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbWFpbDogZmJVc2VyLmVtYWlsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb2ZpbGVJbWc6IGBodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8ke2ZiVXNlci5pZH0vcGljdHVyZT90eXBlPW5vcm1hbGAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlyc3ROYW1lOiBmYlVzZXIuZmlyc3RfbmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYXN0TmFtZTogZmJVc2VyLmxhc3RfbmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhY2Nlc3NUb2tlbjogYXV0aFJlc3BvbnNlLmFjY2Vzc1Rva2VuXG4gICAgICAgICAgICAgICAgICAgICAgICB9IGFzIFNvY2lhbFVzZXIpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LCB0aGlzLl9jb25maWcubG9naW5PcHRpb25zKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgbG9nb3V0KCk6IE9ic2VydmFibGU8YW55PiB7XG4gICAgICAgIHJldHVybiBPYnNlcnZhYmxlLmNyZWF0ZShvYnNlcnZlciA9PiBvYnNlcnZlci5jb21wbGV0ZShGQi5sb2dvdXQoKSkpO1xuICAgIH1cbn1cbiJdfQ==