{"version":3,"file":"ngx-social-login.js.map","sources":["ng://ngx-social-login/lib/models/config-injection-token.ts","ng://ngx-social-login/lib/providers/oauth-provider.ts","ng://ngx-social-login/lib/models/provider.ts","ng://ngx-social-login/lib/providers/facebook-provider.ts","ng://ngx-social-login/lib/providers/google-provider.ts","ng://ngx-social-login/lib/services/social-login.service.ts","ng://ngx-social-login/lib/ngx-social-login.module.ts"],"sourcesContent":["import {InjectionToken} from '@angular/core';\nimport {ProviderConfig} from './config/provider-config';\n\nexport const CONFIG: InjectionToken<ProviderConfig> = new InjectionToken<ProviderConfig>('providers configuration');\n","import { Observable } from 'rxjs';\nimport { Provider } from '../models/provider';\nimport { SocialUser } from '../models/social-user';\n\nexport abstract class OauthProvider {\n    private readonly ID_PREFIX = 'social-login__';\n\n    constructor(provider: Provider, src: string, onload: () => void, async = true) {\n        const id = this.ID_PREFIX + provider;\n\n        if (document.getElementById(id)) {\n            return;\n        }\n\n        const script = document.createElement('script');\n        script.id = id;\n        script.async = async;\n        script.src = src;\n        script.onload = onload;\n        script.defer = true;\n        document.head.appendChild(script);\n    }\n\n    abstract login(): Observable<SocialUser>;\n\n    abstract logout(): Observable<any>;\n}\n","export enum Provider {\n    FACEBOOK = 'facebook',\n    GOOGLE = 'google'\n}\n","import { OauthProvider } from './oauth-provider';\nimport { Observable } from 'rxjs';\nimport { FacebookProviderConfig } from '../models/config/facebook-provider-config';\nimport { SocialUser } from '../models/social-user';\nimport { Provider } from '../models/provider';\n\ndeclare const FB: any;\n\nexport class FacebookProvider extends OauthProvider {\n    constructor(private _config: FacebookProviderConfig) {\n        super(Provider.FACEBOOK, '//connect.facebook.net/en_US/sdk.js', () => {\n            const initConfig = this._config.initOptions;\n            const config = initConfig.version ? initConfig : { ...initConfig, ...{ version: 'v2.9' } };\n            FB.init(config);\n        });\n    }\n\n    login(): Observable<SocialUser> {\n        return Observable.create(observer => {\n            FB.login((response: any) => {\n                if (response.authResponse) {\n                    const authResponse = response.authResponse;\n                    FB.api('/me?fields=name,email,picture,first_name,last_name', (fbUser: any) => {\n                        observer.complete({\n                            id: fbUser.id,\n                            name: fbUser.name,\n                            email: fbUser.email,\n                            profileImg: `https://graph.facebook.com/${fbUser.id}/picture?type=normal`,\n                            firstName: fbUser.first_name,\n                            lastName: fbUser.last_name,\n                            accessToken: authResponse.accessToken\n                        } as SocialUser);\n                    });\n                }\n            }, this._config.loginOptions);\n        });\n    }\n\n    logout(): Observable<any> {\n        return Observable.create(observer => observer.complete(FB.logout()));\n    }\n}\n","import { Observable, from } from 'rxjs';\nimport { OauthProvider } from './oauth-provider';\nimport { map } from 'rxjs/operators';\nimport { GoogleProviderConfig } from '../models/config/google-provider-config';\nimport { Provider } from '../models/provider';\nimport { SocialUser } from '../models/social-user';\n\ndeclare const gapi: any;\n\nexport class GoogleProvider extends OauthProvider {\n    private _googleAuth: any;\n\n    constructor(config: GoogleProviderConfig) {\n        super(Provider.GOOGLE, '//apis.google.com/js/platform.js', () => {\n            gapi.load('auth2', () => {\n                const conf = !config.scope ? { ...config, ...{ scope: 'email' } } : config;\n                gapi.auth2\n                    .init(conf)\n                    .then(auth => (this._googleAuth = auth))\n                    .catch(err => {\n                        throw new Error(`Something went wrong during initialization: ${err.details}`);\n                    });\n            });\n        });\n    }\n\n    login(): Observable<SocialUser> {\n        return from(this._googleAuth.signIn({ prompt: 'select_account' })).pipe(\n            map(() => {\n                const profile = this._googleAuth.currentUser.get().getBasicProfile();\n                const accessToken = this._googleAuth.currentUser.get().getAuthResponse(true).access_token;\n                const idToken = this._googleAuth.currentUser.get().getAuthResponse(true).id_token;\n\n                return {\n                    id: profile.getId(),\n                    email: profile.getEmail(),\n                    name: profile.getName(),\n                    profileImg: profile.getImageUrl(),\n                    accessToken: accessToken,\n                    idToken: idToken\n                };\n            })\n        );\n    }\n\n    logout(): Observable<any> {\n        return Observable.create(observer => observer.complete(this._googleAuth.signOut()));\n    }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { OauthProvider } from '../providers/oauth-provider';\nimport { Observable, EMPTY } from 'rxjs';\nimport { ProviderConfig } from '../models/config/provider-config';\nimport { CONFIG } from '../models/config-injection-token';\nimport { FacebookProvider } from '../providers/facebook-provider';\nimport { FacebookProviderConfig } from '../models/config/facebook-provider-config';\nimport { GoogleProviderConfig } from '../models/config/google-provider-config';\nimport { GoogleProvider } from '../providers/google-provider';\nimport { Provider } from '../models/provider';\nimport { SocialUser } from '../models/social-user';\n\n@Injectable()\nexport class SocialLoginService {\n    private readonly _providers: { [providerId: string]: OauthProvider } = {};\n\n    private _providerInUse: Provider;\n\n    constructor(@Inject(CONFIG) config: ProviderConfig) {\n        this._providers = Object.keys(config).reduce((obj, providerId) => {\n            const provider = Provider[providerId.toUpperCase()];\n            obj[provider] = this.oauthProviderFactory(provider, config[providerId]);\n            return obj;\n        }, {});\n    }\n\n    login(provider: Provider): Observable<SocialUser> {\n        this._providerInUse = provider;\n        const oauthProvider = this._providers[provider];\n        return oauthProvider ? oauthProvider.login() : EMPTY;\n    }\n\n    logout(): Observable<SocialUser> {\n        const oauthProvider = this._providers[this._providerInUse];\n        return oauthProvider ? oauthProvider.logout() : EMPTY;\n    }\n\n    private oauthProviderFactory(\n        provider: Provider,\n        config: GoogleProviderConfig | FacebookProviderConfig\n    ): OauthProvider {\n        switch (provider) {\n            case Provider.FACEBOOK:\n                return new FacebookProvider(config as FacebookProviderConfig);\n            case Provider.GOOGLE:\n                return new GoogleProvider(config as GoogleProviderConfig);\n        }\n    }\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {SocialLoginService} from './services/social-login.service';\nimport {ProviderConfig} from './models/config/provider-config';\nimport {CONFIG} from './models/config-injection-token';\n\n@NgModule({\n    providers: [SocialLoginService]\n})\nexport class NgxSocialLoginModule {\n\n    static init(config: ProviderConfig): ModuleWithProviders {\n        return {\n            ngModule: NgxSocialLoginModule,\n            providers: [\n                {provide: CONFIG, useValue: config}\n            ]\n        };\n    }\n}\n"],"names":[],"mappings":"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"}
